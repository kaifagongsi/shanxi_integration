<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kfgs.mapper.TbProtectionNoticeMapper" >
    <resultMap id="BaseResultMap" type="com.kfgs.domain.TbProtectionNotice" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="title_simple" property="titleSimple" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="DATE" />
        <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
        <result column="typeVal" property="typeval" jdbcType="VARCHAR" />
        <result column="notice_time" property="noticeTime" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.kfgs.domain.TbProtectionNotice" extends="BaseResultMap" >
        <result column="content" property="content" jdbcType="LONGVARBINARY" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
    id, title, title_simple, create_time, isdelete, typeVal, notice_time
  </sql>
    <sql id="Blob_Column_List" >
    content
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.kfgs.domain.TbProtectionNoticeExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from tb_protection_notice
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kfgs.domain.TbProtectionNoticeExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tb_protection_notice
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from tb_protection_notice
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_protection_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.kfgs.domain.TbProtectionNoticeExample" >
        delete from tb_protection_notice
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.kfgs.domain.TbProtectionNotice" >
    insert into tb_protection_notice (id, title, title_simple,
      create_time, isdelete, typeVal,
      notice_time, content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{titleSimple,jdbcType=VARCHAR},
      #{createTime,jdbcType=DATE}, #{isdelete,jdbcType=INTEGER}, #{typeval,jdbcType=VARCHAR},
      #{noticeTime,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARBINARY})
  </insert>
    <insert id="insertSelective" parameterType="com.kfgs.domain.TbProtectionNotice" >
        insert into tb_protection_notice
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="titleSimple != null" >
                title_simple,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="isdelete != null" >
                isdelete,
            </if>
            <if test="typeval != null" >
                typeVal,
            </if>
            <if test="noticeTime != null" >
                notice_time,
            </if>
            <if test="content != null" >
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="titleSimple != null" >
                #{titleSimple,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=DATE},
            </if>
            <if test="isdelete != null" >
                #{isdelete,jdbcType=INTEGER},
            </if>
            <if test="typeval != null" >
                #{typeval,jdbcType=VARCHAR},
            </if>
            <if test="noticeTime != null" >
                #{noticeTime,jdbcType=VARCHAR},
            </if>
            <if test="content != null" >
                #{content,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.kfgs.domain.TbProtectionNoticeExample" resultType="java.lang.Integer" >
        select count(*) from tb_protection_notice
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update tb_protection_notice
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null" >
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.titleSimple != null" >
                title_simple = #{record.titleSimple,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=DATE},
            </if>
            <if test="record.isdelete != null" >
                isdelete = #{record.isdelete,jdbcType=INTEGER},
            </if>
            <if test="record.typeval != null" >
                typeVal = #{record.typeval,jdbcType=VARCHAR},
            </if>
            <if test="record.noticeTime != null" >
                notice_time = #{record.noticeTime,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null" >
                content = #{record.content,jdbcType=LONGVARBINARY},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map" >
        update tb_protection_notice
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        title_simple = #{record.titleSimple,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=DATE},
        isdelete = #{record.isdelete,jdbcType=INTEGER},
        typeVal = #{record.typeval,jdbcType=VARCHAR},
        notice_time = #{record.noticeTime,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=LONGVARBINARY}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update tb_protection_notice
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        title_simple = #{record.titleSimple,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=DATE},
        isdelete = #{record.isdelete,jdbcType=INTEGER},
        typeVal = #{record.typeval,jdbcType=VARCHAR},
        notice_time = #{record.noticeTime,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.kfgs.domain.TbProtectionNotice" >
        update tb_protection_notice
        <set >
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="titleSimple != null" >
                title_simple = #{titleSimple,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=DATE},
            </if>
            <if test="isdelete != null" >
                isdelete = #{isdelete,jdbcType=INTEGER},
            </if>
            <if test="typeval != null" >
                typeVal = #{typeval,jdbcType=VARCHAR},
            </if>
            <if test="noticeTime != null" >
                notice_time = #{noticeTime,jdbcType=VARCHAR},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kfgs.domain.TbProtectionNotice" >
    update tb_protection_notice
    set title = #{title,jdbcType=VARCHAR},
      title_simple = #{titleSimple,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      isdelete = #{isdelete,jdbcType=INTEGER},
      typeVal = #{typeval,jdbcType=VARCHAR},
      notice_time = #{noticeTime,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.kfgs.domain.TbProtectionNotice" >
    update tb_protection_notice
    set title = #{title,jdbcType=VARCHAR},
      title_simple = #{titleSimple,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      isdelete = #{isdelete,jdbcType=INTEGER},
      typeVal = #{typeval,jdbcType=VARCHAR},
      notice_time = #{noticeTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        insert into tb_protection_notice(title,create_time,isdelete,typeVal,notice_time)
        values
        <foreach collection="list" item="item"   separator=",">
            (
              #{item.title},#{item.createTime},#{item.isdelete},#{item.typeval},#{item.noticeTime}
            )
        </foreach>
    </insert>

    <select id="selectById" resultType="com.kfgs.domain.TbProtectionNotice">
        select id as id, title as title, notice_time as noticeTime from tb_protection_notice where id = #{approvalAnnouncementNoEnterpriseAll}
    </select>
    <select id="selectByName" resultType="java.lang.String">
        SELECT
            id
        FROM
            tb_protection_notice
        where
            title = #{approvalAnnouncementNoEnterpriseAll}
    </select>
</mapper>
